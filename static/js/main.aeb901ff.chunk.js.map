{"version":3,"sources":["Canvas.js","FileUpload.js","Box.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","file","img","position","setImgLoaded","useState","top","setTop","left","setLeft","width","setWidth","height","setHeight","imgWidth","setImgWidth","imgHeight","setImgHeight","useEffect","current","src","winHeight","window","innerHeight","winWidth","innerWidth","windowRatio","imgRatio","setImgDims","tf","process","then","model","tensor","fromPixels","sliced","length","readyfied","resizeNearestNeighbor","div","reshape","predict","array","rect","getBoundingClientRect","faceBoxTop","faceBoxLeft","faceBoxHeight","faceBoxWidth","className","ref","alt","style","FileUpload","setFile","type","name","onChange","e","target","files","substr","reader","FileReader","onload","result","readAsDataURL","Box","box","setPosition","imgLoaded","setLength","dragging","useRef","x","y","imgTop","imgLeft","imgBottom","imgRight","byWidth","bottom","right","isWithinLimitsWidth","newTop","newBottom","isWithinLimitsHeight","newLeft","newRight","onMouseDown","event","preventDefault","clientX","clientY","onMouseMove","posX","posY","onMouseUp","Math","floor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeb901ff.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nconst MODEL_PATH = process.env.PUBLIC_URL + \"/model/model.json\";\r\nconst PROPORTION = 0.9;\r\n\r\nexport default function Canvas({ file, img, position, setImgLoaded }) {\r\n  const [top, setTop] = useState(null);\r\n  const [left, setLeft] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [height, setHeight] = useState(null);\r\n  const [imgWidth, setImgWidth] = useState(null);\r\n  const [imgHeight, setImgHeight] = useState(null);\r\n\r\n  const setImgDims = () => {\r\n    const winHeight = PROPORTION * window.innerHeight;\r\n    const winWidth = PROPORTION * window.innerWidth;\r\n    const windowRatio = winHeight / winWidth;\r\n    const imgRatio = img.current.height / img.current.width;\r\n    if (imgRatio > windowRatio) {\r\n      setImgHeight(winHeight);\r\n      setImgWidth(winHeight / imgRatio);\r\n    } else {\r\n      setImgWidth(winWidth);\r\n      setImgHeight(winWidth * imgRatio);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    img.current.src = file;\r\n    setImgDims();\r\n    setImgLoaded(file);\r\n    if (!position) return;\r\n    tf.tidy(() => {\r\n      tf.loadLayersModel(MODEL_PATH).then((model) => {\r\n        const tensor = tf.browser.fromPixels(img.current);\r\n        const sliced = tf.slice(\r\n          tensor,\r\n          [position.top, position.left],\r\n          [position.length, position.length]\r\n        );\r\n        const readyfied = tf.image\r\n          .resizeNearestNeighbor(sliced, [256, 256], true)\r\n          .div(255)\r\n          .reshape([1, 256, 256, 3]);\r\n        const result = model.predict(readyfied);\r\n        result.array().then((array) => {\r\n          array = array[0];\r\n          const rect = img.current.getBoundingClientRect();\r\n          const faceBoxTop =\r\n            rect.top + position.top + array[0] * position.length;\r\n          const faceBoxLeft =\r\n            rect.left + position.left + array[1] * position.length;\r\n          const faceBoxHeight = (array[2] - array[0]) * position.length;\r\n          const faceBoxWidth = (array[3] - array[1]) * position.length;\r\n          setTop(faceBoxTop);\r\n          setLeft(faceBoxLeft);\r\n          setHeight(faceBoxHeight);\r\n          setWidth(faceBoxWidth);\r\n        });\r\n      });\r\n    });\r\n  }, [file, position]);\r\n\r\n  if (!file) return null;\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"img\"\r\n        ref={img}\r\n        src=\"\"\r\n        alt=\"pet\"\r\n        style={{ width: imgWidth, height: imgHeight }}\r\n      />\r\n      <div\r\n        className=\"faceBox\"\r\n        style={{ top: top, left: left, width: width, height: height }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FileUpload({ setFile }) {\r\n  const readFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type.substr(0, 5) === \"image\") {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setFile(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input className=\"inputFile\" type=\"file\" name=\"file\" onChange={readFile} />\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function Box({ img, box, position, setPosition, imgLoaded }) {\r\n  const [top, setTop] = useState();\r\n  const [left, setLeft] = useState();\r\n  const [length, setLength] = useState();\r\n  const dragging = useRef(false);\r\n  const x = useRef();\r\n  const y = useRef();\r\n  const imgWidth = useRef();\r\n  const imgHeight = useRef();\r\n  const imgTop = useRef();\r\n  const imgLeft = useRef();\r\n  const imgBottom = useRef();\r\n  const imgRight = useRef();\r\n  const byWidth = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!img.current) return;\r\n    const rect = img.current.getBoundingClientRect();\r\n    imgTop.current = rect.top;\r\n    imgLeft.current = rect.left;\r\n    imgBottom.current = rect.bottom;\r\n    imgRight.current = rect.right;\r\n    imgWidth.current = img.current.width;\r\n    imgHeight.current = img.current.height;\r\n    if (imgWidth.current > imgHeight.current) {\r\n      setLength(imgHeight.current);\r\n      byWidth.current = false;\r\n    } else {\r\n      setLength(imgWidth.current);\r\n      byWidth.current = true;\r\n    }\r\n    setTop(imgTop.current);\r\n    setLeft(imgLeft.current);\r\n  }, [imgLoaded]);\r\n\r\n  const onMouseDown = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    dragging.current = true;\r\n    x.current = e.clientX;\r\n    y.current = e.clientY;\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (dragging.current) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      const posX = x.current - e.clientX;\r\n      const posY = y.current - e.clientY;\r\n      x.current = e.clientX;\r\n      y.current = e.clientY;\r\n      if (byWidth.current) {\r\n        const newTop = top - posY;\r\n        if (isWithinLimitsWidth(newTop)) {\r\n          setTop(newTop);\r\n        }\r\n      } else {\r\n        const newLeft = left - posX;\r\n        if (isWithinLimitsHeight(newLeft)) {\r\n          setLeft(newLeft);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isWithinLimitsWidth = (newTop) => {\r\n    const newBottom = newTop + length;\r\n    if (newTop < imgTop.current || newBottom > imgBottom.current) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const isWithinLimitsHeight = (newLeft) => {\r\n    const newRight = newLeft + length;\r\n    if (newLeft < imgLeft.current || newRight > imgRight.current) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = (e) => {\r\n    dragging.current = false;\r\n    setPosition({\r\n      top: Math.floor(top - imgTop.current),\r\n      left: Math.floor(left - imgLeft.current),\r\n      length: Math.floor(length),\r\n    });\r\n  };\r\n\r\n  if (!img.current) return null;\r\n  return (\r\n    <div\r\n      ref={box}\r\n      className=\"box\"\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n      style={{ width: length, height: length, top: top, left: left }}\r\n    />\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Canvas from \"./Canvas\";\nimport FileUpload from \"./FileUpload\";\nimport Box from \"./Box\";\n\nexport default function App() {\n  const [file, setFile] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [imgLoaded, setImgLoaded] = useState(null);\n  const box = useRef(null);\n  const img = useRef(null);\n\n  return (\n    <>\n      <FileUpload setFile={setFile} />\n      <Box\n        img={img}\n        box={box}\n        position={position}\n        setPosition={setPosition}\n        imgLoaded={imgLoaded}\n      />\n      <Canvas\n        file={file}\n        img={img}\n        position={position}\n        setImgLoaded={setImgLoaded}\n      />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}