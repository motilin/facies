{"version":3,"sources":["Canvas.js","FileUpload.js","Box.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","file","img","position","setImgResized","imgResized","imgLoaded","setImgLoaded","useState","top","setTop","left","setLeft","width","setWidth","height","setHeight","imgWidth","setImgWidth","imgHeight","setImgHeight","ready","useRef","useEffect","current","src","complete","naturalHeight","winHeight","window","innerHeight","winWidth","innerWidth","windowRatio","imgRatio","setImgDims","tf","process","then","model","tensor","fromPixels","sliced","length","readyfied","resizeNearestNeighbor","div","reshape","predict","array","rect","getBoundingClientRect","faceBoxTop","faceBoxLeft","faceBoxHeight","faceBoxWidth","className","ref","alt","onLoad","style","FileUpload","setFile","type","name","onChange","e","target","files","substr","reader","FileReader","onload","result","readAsDataURL","Box","box","setPosition","setLength","dragging","x","y","imgTop","imgLeft","imgBottom","imgRight","byWidth","bottom","right","isWithinLimitsWidth","newTop","newBottom","isWithinLimitsHeight","newLeft","newRight","onMouseDown","event","preventDefault","clientX","clientY","onMouseMove","posX","posY","onMouseUp","Math","floor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84d508db.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nconst MODEL_PATH = process.env.PUBLIC_URL + \"/model/model.json\";\r\nconst PROPORTION = 0.9;\r\n\r\nexport default function Canvas({\r\n  file,\r\n  img,\r\n  position,\r\n  imgResized,\r\n  setImgResized,\r\n  imgLoaded,\r\n  setImgLoaded,\r\n}) {\r\n  const [top, setTop] = useState(null);\r\n  const [left, setLeft] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [height, setHeight] = useState(null);\r\n  const [imgWidth, setImgWidth] = useState(null);\r\n  const [imgHeight, setImgHeight] = useState(null);\r\n  const ready = useRef(null);\r\n\r\n  const setImgDims = () => {\r\n    const winHeight = PROPORTION * window.innerHeight;\r\n    const winWidth = PROPORTION * window.innerWidth;\r\n    const windowRatio = winHeight / winWidth;\r\n    const imgRatio = img.current.height / img.current.width;\r\n    if (imgRatio > windowRatio) {\r\n      setImgHeight(winHeight);\r\n      setImgWidth(winHeight / imgRatio);\r\n    } else {\r\n      setImgWidth(winWidth);\r\n      setImgHeight(winWidth * imgRatio);\r\n    }\r\n    ready.current = true;\r\n    setImgResized(true);\r\n  };\r\n\r\n  const onLoad = () => {\r\n    ready.current = false;\r\n    setImgResized(false);\r\n    setImgLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    img.current.src = file;\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      ready.current ||\r\n      !img.current ||\r\n      !img.current.complete ||\r\n      img.current.naturalHeight === 0\r\n    )\r\n      return;\r\n    setImgDims();\r\n  }, [imgLoaded]);\r\n\r\n  useEffect(() => {\r\n    if (!position || !ready.current) return;\r\n    tf.tidy(() => {\r\n      tf.loadLayersModel(MODEL_PATH).then((model) => {\r\n        const tensor = tf.browser.fromPixels(img.current);\r\n        const sliced = tf.slice(\r\n          tensor,\r\n          [position.top, position.left],\r\n          [position.length, position.length]\r\n        );\r\n        const readyfied = tf.image\r\n          .resizeNearestNeighbor(sliced, [256, 256], true)\r\n          .div(255)\r\n          .reshape([1, 256, 256, 3]);\r\n        const result = model.predict(readyfied);\r\n        result.array().then((array) => {\r\n          array = array[0];\r\n          const rect = img.current.getBoundingClientRect();\r\n          const faceBoxTop =\r\n            rect.top + position.top + array[0] * position.length;\r\n          const faceBoxLeft =\r\n            rect.left + position.left + array[1] * position.length;\r\n          const faceBoxHeight = (array[2] - array[0]) * position.length;\r\n          const faceBoxWidth = (array[3] - array[1]) * position.length;\r\n          setTop(faceBoxTop);\r\n          setLeft(faceBoxLeft);\r\n          setHeight(faceBoxHeight);\r\n          setWidth(faceBoxWidth);\r\n        });\r\n      });\r\n    });\r\n  }, [position]);\r\n\r\n  if (!file) return null;\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"img\"\r\n        ref={img}\r\n        src=\"\"\r\n        alt=\"pet\"\r\n        onLoad={onLoad}\r\n        style={{ width: imgWidth, height: imgHeight }}\r\n      />\r\n      <div\r\n        className=\"faceBox\"\r\n        style={{ top: top, left: left, width: width, height: height }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FileUpload({ setFile, setImgLoaded }) {\r\n  const readFile = (e) => {\r\n    setImgLoaded(false);\r\n    const file = e.target.files[0];\r\n    if (file && file.type.substr(0, 5) === \"image\") {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setFile(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input className=\"inputFile\" type=\"file\" name=\"file\" onChange={readFile} />\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function Box({ img, box, position, setPosition, imgResized }) {\r\n  const [top, setTop] = useState();\r\n  const [left, setLeft] = useState();\r\n  const [length, setLength] = useState();\r\n  const dragging = useRef(false);\r\n  const x = useRef();\r\n  const y = useRef();\r\n  const imgWidth = useRef();\r\n  const imgHeight = useRef();\r\n  const imgTop = useRef();\r\n  const imgLeft = useRef();\r\n  const imgBottom = useRef();\r\n  const imgRight = useRef();\r\n  const byWidth = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!img.current) return;\r\n    const rect = img.current.getBoundingClientRect();\r\n    imgTop.current = rect.top;\r\n    imgLeft.current = rect.left;\r\n    imgBottom.current = rect.bottom;\r\n    imgRight.current = rect.right;\r\n    imgWidth.current = img.current.width;\r\n    imgHeight.current = img.current.height;\r\n    if (imgWidth.current > imgHeight.current) {\r\n      setLength(imgHeight.current);\r\n      byWidth.current = false;\r\n    } else {\r\n      setLength(imgWidth.current);\r\n      byWidth.current = true;\r\n    }\r\n    setTop(imgTop.current);\r\n    setLeft(imgLeft.current);\r\n  }, [imgResized]);\r\n\r\n  const onMouseDown = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    dragging.current = true;\r\n    x.current = e.clientX;\r\n    y.current = e.clientY;\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (dragging.current) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      const posX = x.current - e.clientX;\r\n      const posY = y.current - e.clientY;\r\n      x.current = e.clientX;\r\n      y.current = e.clientY;\r\n      if (byWidth.current) {\r\n        const newTop = top - posY;\r\n        if (isWithinLimitsWidth(newTop)) {\r\n          setTop(newTop);\r\n        }\r\n      } else {\r\n        const newLeft = left - posX;\r\n        if (isWithinLimitsHeight(newLeft)) {\r\n          setLeft(newLeft);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isWithinLimitsWidth = (newTop) => {\r\n    const newBottom = newTop + length;\r\n    if (newTop < imgTop.current || newBottom > imgBottom.current) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const isWithinLimitsHeight = (newLeft) => {\r\n    const newRight = newLeft + length;\r\n    if (newLeft < imgLeft.current || newRight > imgRight.current) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = (e) => {\r\n    dragging.current = false;\r\n    setPosition({\r\n      top: Math.floor(top - imgTop.current),\r\n      left: Math.floor(left - imgLeft.current),\r\n      length: Math.floor(length),\r\n    });\r\n  };\r\n\r\n  if (!img.current) return null;\r\n  return (\r\n    <div\r\n      ref={box}\r\n      className=\"box\"\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n      style={{ width: length, height: length, top: top, left: left }}\r\n    />\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Canvas from \"./Canvas\";\nimport FileUpload from \"./FileUpload\";\nimport Box from \"./Box\";\n\nexport default function App() {\n  const [file, setFile] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [imgLoaded, setImgLoaded] = useState(null);\n  const [imgResized, setImgResized] = useState(null);\n  const box = useRef(null);\n  const img = useRef(null);\n\n  return (\n    <>\n      <FileUpload setFile={setFile} setImgLoaded={setImgLoaded} />\n      <Box\n        img={img}\n        box={box}\n        position={position}\n        setPosition={setPosition}\n        imgResized={imgResized}\n      />\n      <Canvas\n        file={file}\n        img={img}\n        position={position}\n        imgResized={imgResized}\n        setImgResized={setImgResized}\n        imgLoaded={imgLoaded}\n        setImgLoaded={setImgLoaded}\n      />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}